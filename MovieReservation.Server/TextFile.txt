using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using System;
using System.Linq;
using System.Threading.Tasks;
namespace MovieReservation.Server
{
    public static class InitialiserExtensions
    {
        public static void AddAsyncSeeding(this DbContextOptionsBuilder builder, IServiceProvider serviceProvider)
        {
            builder.UseAsyncSeeding(async (context, _, ct) =>
            {
                var initialiser = serviceProvider.GetRequiredService<MovieReservationDbContextInitialiser>();

                await initialiser.SeedAsync();
            });
        }

        public static async Task InitialiseDatabaseAsync(this WebApplication app)
        {
            using var scope = app.Services.CreateScope();

            var initialiser = scope.ServiceProvider.GetRequiredService<MovieReservationDbContextInitialiser>();

            await initialiser.InitialiseAsync();
        }
    }
    public class MovieReservationDbContextInitialiser
    {
        private readonly ILogger<MovieReservationDbContextInitialiser> _logger;
        private readonly MovieReservationDbContext _context;
        private readonly UserManager<User> _userManager;
        private readonly RoleManager<IdentityRole> _roleManager;

        public MovieReservationDbContextInitialiser(ILogger<MovieReservationDbContextInitialiser> logger, MovieReservationDbContext context, UserManager<User> userManager, RoleManager<IdentityRole> roleManager)
        {
            _logger = logger;
            _context = context;
            _userManager = userManager;
            _roleManager = roleManager;
        }
        public async Task InitialiseAsync()
        {
            try
            {
                await _context.Database.MigrateAsync();
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "An error occurred while initialising the database.");
                throw;
            }
        }

        public async Task SeedAsync()
        {
            try
            {
                await SeedUsersAsync();
                await TrySeedAsync();
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "An error occurred while seeding the database.");
                throw;
            }
        }
        private async Task SeedUsersAsync()
        {
            // Seed Identity Roles
            var roles = new[] { "Admin", "ApiUser" };
            foreach (var role in roles)
            {
                if (!await _roleManager.RoleExistsAsync(role))
                {
                    await _roleManager.CreateAsync(new IdentityRole(role));
                }
            }

            // Định nghĩa GUID cố định cho từng user
            var user1Id = "daeffa56-9a2f-46e6-93fb-b63b50e00302";
            var user2Id = "2b6dfb56-8a4d-4df7-8b9f-b2d0a18bb58e";
            var user3Id = "72c94147-cb3a-4f80-b015-9acb882bc5c0";
            var user4Id = "ce129c6e-1990-4db8-97e2-e4daec6c8d10";
            var user5Id = "0f3a28a2-0d76-47d2-aee7-f607d83ec707";
            var user6Id = "b1220e65-7095-4d5a-b76d-8411f42a3bb7";
            var user7Id = "d1562b8b-92ad-4c92-b6c0-e4974acb942e";
            var user8Id = "2950b631-f5fd-4680-b911-657f8727f7b8";
            var user9Id = "6c4dc5b6-8b89-4c35-a19e-5b08c680a3dc";
            var user10Id = "abf85a44-d167-46f7-8d38-b5b3c52f9611";

            // Danh sách user với ID cố định
            var users = new[]
            {
                new { Id = user1Id, Email = "proladinh144@gmail.com", Password = "Admin@123", Address = "Karachi", Contact = "+923009999999", Role = "Admin" },
                new { Id = user2Id, Email = "dinhknd3@gmail.com", Password = "User@123", Address = "Karachi", Contact = "+923009999999", Role = "ApiUser" },
                new { Id = user3Id, Email = "arafaysaleem@gmail.com", Password = "User@123", Address = "Karachi", Contact = "+923009999999", Role = "ApiUser" },
                new { Id = user4Id, Email = "user2@gmail.com", Password = "User@123", Address = "Karachi", Contact = "+923009999999", Role = "ApiUser" },
                new { Id = user5Id, Email = "user3@gmail.com", Password = "User@123", Address = "Karachi", Contact = "+923009999999", Role = "ApiUser" },
                new { Id = user6Id, Email = "deleteme@eztickets.com", Password = "User@123", Address = "Re", Contact = "+923009268622", Role = "ApiUser" },
                new { Id = user7Id, Email = "user4@gmail.com", Password = "User@123", Address = "Lahore", Contact = "+923001234567", Role = "ApiUser" },
                new { Id = user8Id, Email = "user5@gmail.com", Password = "User@123", Address = "Islamabad", Contact = "+923008765432", Role = "ApiUser" },
                new { Id = user9Id, Email = "user6@gmail.com", Password = "User@123", Address = "Peshawar", Contact = "+923007654321", Role = "ApiUser" },
                new { Id = user10Id, Email = "user7@gmail.com", Password = "User@123", Address = "Quetta", Contact = "+923006543210", Role = "ApiUser" }
            };

            // Seed Identity Users
            foreach (var user in users)
            {
                if (!_userManager.Users.Any(u => u.Id == user.Id))
                {
                    var identityUser = new User
                    {
                        Id = user.Id,
                        Email = user.Email,
                        UserName = user.Email,
                        Address = user.Address,
                        Contact = user.Contact,
                        EmailConfirmed = true
                    };

                    var result = await _userManager.CreateAsync(identityUser, user.Password);
                    if (result.Succeeded)
                    {
                        await _userManager.AddToRoleAsync(identityUser, user.Role);
                    }
                }
            }

        }
        public async Task TrySeedAsync()
        {
            // Định nghĩa GUID cố định cho từng user
            var user1Id = "daeffa56-9a2f-46e6-93fb-b63b50e00302";
            var user2Id = "2b6dfb56-8a4d-4df7-8b9f-b2d0a18bb58e";
            var user3Id = "72c94147-cb3a-4f80-b015-9acb882bc5c0";
            var user4Id = "ce129c6e-1990-4db8-97e2-e4daec6c8d10";
            var user5Id = "0f3a28a2-0d76-47d2-aee7-f607d83ec707";
            var user6Id = "b1220e65-7095-4d5a-b76d-8411f42a3bb7";
            var user7Id = "d1562b8b-92ad-4c92-b6c0-e4974acb942e";
            var user8Id = "2950b631-f5fd-4680-b911-657f8727f7b8";
            var user9Id = "6c4dc5b6-8b89-4c35-a19e-5b08c680a3dc";
            var user10Id = "abf85a44-d167-46f7-8d38-b5b3c52f9611";

            // Seed Genres
            if (!_context.Genres.Any())
            {
                _context.Genres.AddRange(
                    new Genre { Id = 1, Name = "Horror" },
                    new Genre { Id = 2, Name = "Action" },
                    new Genre { Id = 3, Name = "Fantasy" },
                    new Genre { Id = 4, Name = "Comedy" },
                    new Genre { Id = 5, Name = "Drama" },
                    new Genre { Id = 6, Name = "Thriller" },
                    new Genre { Id = 7, Name = "Mystery" },
                    new Genre { Id = 8, Name = "Romance" },
                    new Genre { Id = 10, Name = "Sci-Fi" },
                    new Genre { Id = 11, Name = "Crime" }
                );
                
            }
            // Seed Movies
            if (!_context.Movies.Any())
            {
                _context.Movies.AddRange(
                    new Movie
                    {
                        Id = 4,
                        Title = "GODZILLA VS KONG",
                        Summary = "Legends collide as Godzilla and Kong, the two most powerful forces of nature, clash on the big screen in a spectacular battle for the ages. As a squadron embarks on a perilous mission into fantastic uncharted terrain, unearthing clues to the Titans' very origins and mankind's survival, a conspiracy threatens to wipe the creatures, both good and bad, from the face of the earth forever.",
                        Year = 2021,
                        Rating = 6.5m,
                        TrailerUrl = "https://media.publit.io/file/h_720/godzilla_vs_kong.mp4",
                        PosterUrl = "https://images.squarespace-cdn.com/content/v1/51b3dc8ee4b051b96ceb10de/1615997337403-G2AT6OCZ0LD8VLQ1IHGC/ke17ZwdGBToddI8pDm48kJYq1aWJR-Opw9YCGEJvNoV7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0k5fwC0WRNFJBIXiBeNI5fL5tAx0_Wm6zQGcCxuXSnc3-CppMx_loiHYdjEK2HksYg/EwnOBogWEAEiakT.jpeg?format=1500w",
                        MovieType = MovieType.NowShowing
                    },
                    new Movie
                    {
                        Id = 34,
                        Title = "JOKER",
                        Summary = "Arthur Fleck, a party clown, leads an impoverished life with his ailing mother. However, when society shuns him and brands him as a freak, he decides to embrace the life of crime and chaos.",
                        Year = 2019,
                        Rating = 8.4m,
                        TrailerUrl = "https://media.publit.io/file/h_720/joker-x.mp4",
                        PosterUrl = "https://pbs.twimg.com/media/EA4LLfsW4AErVjR.jpg",
                        MovieType = MovieType.NowShowing
                    },
                    new Movie
                    {
                        Id = 35,
                        Title = "SUICIDE SQUAD 2",
                        Summary = "The government sends the most dangerous supervillains in the world -- Bloodsport, Peacemaker, King Shark, Harley Quinn and others -- to the remote, enemy-infused island of Corto Maltese. Armed with high-tech weapons, they trek through the dangerous jungle on a search-and-destroy mission, with only Col. Rick Flag on the ground to make them behave.",
                        Year = 2021,
                        Rating = null,
                        TrailerUrl = "https://media.publit.io/file/h_720/suicide_squad.mp4",
                        PosterUrl = "https://www.inspirationde.com/media/2019/08/cristiano-siqueira-on-behance-1565929796gk84n.png",
                        MovieType = MovieType.ComingSoon
                    },
                    new Movie
                    {
                        Id = 36,
                        Title = "THE BATMAN",
                        Summary = "The Riddler plays a deadly game of cat and mouse with Batman and Commissioner Gordon in Gotham City.",
                        Year = 2022,
                        Rating = null,
                        TrailerUrl = "https://media.publit.io/file/h_720/batman.mp4",
                        PosterUrl = "https://www.inspirationde.com/media/2020/08/the-batman-poster-by-mizuriofficial-on-deviantart-15987584958gkn4.jpg",
                        MovieType = MovieType.ComingSoon
                    }
                );
        
            }

            // Seed MovieGenres
            if (!_context.MovieGenres.Any())
            {

                _context.MovieGenres.AddRange(
                    new MovieGenre { MovieId = 4, GenreId = 1 },
                    new MovieGenre { MovieId = 4, GenreId = 2 },
                    new MovieGenre { MovieId = 4, GenreId = 4 },
                    new MovieGenre { MovieId = 34, GenreId = 5 },
                    new MovieGenre { MovieId = 34, GenreId = 6 },
                    new MovieGenre { MovieId = 34, GenreId = 11 },
                    new MovieGenre { MovieId = 35, GenreId = 2 },
                    new MovieGenre { MovieId = 35, GenreId = 3 },
                    new MovieGenre { MovieId = 35, GenreId = 4 },
                    new MovieGenre { MovieId = 36, GenreId = 2 },
                    new MovieGenre { MovieId = 36, GenreId = 5 },
                    new MovieGenre { MovieId = 36, GenreId = 11 }
                );
                
            }

            // Seed Roles
            if (!_context.Roles.Any())
            {
                _context.Roles.AddRange(
                    new Role { Id = 4, FullName = "Robert Pattinson", Age = 35, PictureUrl = "https://i.pinimg.com/564x/8d/e3/89/8de389c84e919d3577f47118e2627d95.jpg" },
                    new Role { Id = 5, FullName = "Zoë Kravitz", Age = 32, PictureUrl = "https://www.simplyceleb.com/wp-content/uploads/2020/06/Zoe-Kravitz-Filmleri.jpg" },
                    new Role { Id = 6, FullName = "Paul Dano", Age = 36, PictureUrl = "https://resizing.flixster.com/1PQhbMray969ia5n7JHLBO3qATA=/506x652/v2/https://flxt.tmsimg.com/v9/AllPhotos/267214/267214_v9_ba.jpg" },
                    new Role { Id = 7, FullName = "Mat Reeves", Age = 55, PictureUrl = "https://i.dailymail.co.uk/1s/2020/04/10/05/27028708-0-image-a-2_1586494056548.jpg" },
                    new Role { Id = 8, FullName = "Margot Robbie", Age = 30, PictureUrl = "https://hips.hearstapps.com/elleuk.cdnds.net/18/10/1520210874-gettyimages-927252130.jpg?crop=0.988xw:0.658xh;0.0119xw,0.0691xh&resize=640:*" },
                    new Role { Id = 9, FullName = "Pete Davidson", Age = 27, PictureUrl = "https://media.nu.nl/m/ansxdkraedri_sqr256.jpg/pete-davidson-vertelt-nieuwe-liefdes-meteen-over-eigenaardigheden.jpg" },
                    new Role { Id = 10, FullName = "John Cena", Age = 44, PictureUrl = "https://ichef.bbci.co.uk/news/976/cpsprodpb/2536/production/_118662590_cena2.jpg" },
                    new Role { Id = 11, FullName = "James Gunn", Age = 50, PictureUrl = "https://ichef.bbci.co.uk/news/976/cpsprodpb/22F5/production/_103794980_gettyimages-678895846.jpg" },
                    new Role { Id = 12, FullName = "Todd Phillips", Age = 50, PictureUrl = "https://i.redd.it/hwk9xgheqzm51.jpg" },
                    new Role { Id = 13, FullName = "Zazie Beetz", Age = 30, PictureUrl = "https://resizing.flixster.com/t3iiAgmwNQpbDsiVNvNc8s3Zuug=/506x652/v2/https://flxt.tmsimg.com/v9/AllPhotos/981946/981946_v9_bb.jpg" },
                    new Role { Id = 14, FullName = "Robert De Niro", Age = 77, PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/5/58/Robert_De_Niro_Cannes_2016.jpg/220px-Robert_De_Niro_Cannes_2016.jpg" },
                    new Role { Id = 15, FullName = "Joaquin Phoenix", Age = 46, PictureUrl = "https://i.pinimg.com/originals/1d/2e/12/1d2e12756addc022144c4a8ac437f5c0.jpg" },
                    new Role { Id = 16, FullName = "Millie Bobby Brown", Age = 17, PictureUrl = "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQhVfKxsjWZM-30ElFKfETvE1VUZyZ9OV3UcxZ_5O6hQMmawqCV" },
                    new Role { Id = 17, FullName = "Alexander Skarsgård", Age = 44, PictureUrl = "https://encrypted-tbn3.gstatic.com/images?q=wn:GccTXROK8cAOBwEOohepzhbjJdpAUVQBTVOaWQ4Rtp6iR0wMLyx4W" },
                    new Role { Id = 18, FullName = "Rebecca Hall", Age = 39, PictureUrl = "https://i.pinimg.com/originals/30/ac/b4/30acb4e1f6f8f0437a8fb7ceb04085db.jpg" },
                    new Role { Id = 19, FullName = "Adam Wingard", Age = 38, PictureUrl = "https://encrypted-tbn2.gstatic.com/images?q=wn:GcRkWTdn0iu8DiewFAFNvOEOXtFctVTC2-fCX5LWZJN8tc8l035q" },
                    new Role { Id = 20, FullName = "Mary Parent", Age = 53, PictureUrl = "https://encrypted-tbn2.gstatic.com/images?q=wn:GcTai8Ehm5_kioXJMqPfvIoFx8QwIOYsyoqUhFT0Im6FiIL1_mI_" }
                );
                
            }

            // Seed MovieRoles
            if (!_context.MovieRoles.Any())
            {
                _context.MovieRoles.AddRange(
                    new MovieRole { MovieId = 4, RoleId = 16, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 4, RoleId = 17, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 4, RoleId = 18, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 4, RoleId = 19, RoleType = RoleType.Director },
                    new MovieRole { MovieId = 4, RoleId = 20, RoleType = RoleType.Producer },
                    new MovieRole { MovieId = 34, RoleId = 12, RoleType = RoleType.Director },
                    new MovieRole { MovieId = 34, RoleId = 13, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 34, RoleId = 14, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 34, RoleId = 15, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 35, RoleId = 8, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 35, RoleId = 9, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 35, RoleId = 10, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 35, RoleId = 11, RoleType = RoleType.Director },
                    new MovieRole { MovieId = 36, RoleId = 4, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 36, RoleId = 5, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 36, RoleId = 6, RoleType = RoleType.Cast },
                    new MovieRole { MovieId = 36, RoleId = 7, RoleType = RoleType.Director }
                );
                
            }

      
            await _context.SaveChangesAsync();
        }
    }
}